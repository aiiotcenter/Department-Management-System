version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: dms_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: dms
      MYSQL_USER: dms_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./back-end/Database/DMS database.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
    networks:
      - dms_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Backend API
  backend:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    container_name: dms_backend_prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - Database_Password=${MYSQL_ROOT_PASSWORD}
      - DB_HOST=mysql
      - DB_USER=root
      - DB_NAME=dms
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "3001:3001"
    volumes:
      - backend_uploads:/app/uploads
      - backend_qrcodes:/app/QRcodes
      - backend_logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dms_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dms_frontend_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - dms_network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Nginx Reverse Proxy (Optional - for SSL termination)
  nginx:
    image: nginx:alpine
    container_name: dms_nginx_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - dms_network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  mysql_data:
    driver: local
  backend_uploads:
    driver: local
  backend_qrcodes:
    driver: local
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  dms_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 